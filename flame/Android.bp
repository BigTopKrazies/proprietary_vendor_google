/**
 * Copyright (C) 2020 The GZOSP Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * This file is generated by device/google/flame/setup-makefiles.sh
 */

soong_namespace {
}

cc_prebuilt_library_shared {
	name: "libMpeg4SwEncoder",
	owner: "google",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libMpeg4SwEncoder.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libMpeg4SwEncoder.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "liblbs_core",
	owner: "google",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/liblbs_core.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/liblbs_core.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libqdMetaData",
	owner: "google",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libqdMetaData.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libqdMetaData.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libqdutils",
	owner: "google",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libqdutils.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libqdutils.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libqservice",
	owner: "google",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libqservice.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libqservice.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "vendor.qti.hardware.capabilityconfigstore@1.0",
	owner: "google",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/vendor.qti.hardware.capabilityconfigstore@1.0.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/vendor.qti.hardware.capabilityconfigstore@1.0.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libbtnv",
	owner: "google",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libbtnv.so"],
		},
	},
	compile_multilib: "32",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

android_app_import {
	name: "CACertService",
	owner: "google",
	apk: "proprietary/vendor/app/CACertService/CACertService.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	soc_specific: true,
}

android_app_import {
	name: "CneApp",
	owner: "google",
	apk: "proprietary/vendor/app/CneApp/CneApp.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	soc_specific: true,
}

android_app_import {
	name: "IWlanService",
	owner: "google",
	apk: "proprietary/vendor/app/IWlanService/IWlanService.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	soc_specific: true,
}

android_app_import {
	name: "TimeService",
	owner: "google",
	apk: "proprietary/vendor/app/TimeService/TimeService.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	soc_specific: true,
}

android_app_import {
	name: "TrustZoneAccessService",
	owner: "google",
	apk: "proprietary/vendor/app/TrustZoneAccessService/TrustZoneAccessService.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	soc_specific: true,
}

android_app_import {
	name: "adreno_graphics_driver",
	owner: "google",
	apk: "proprietary/vendor/app/adreno_graphics_driver/adreno_graphics_driver.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	soc_specific: true,
}

dex_import {
	name: "com.google.android.camera.experimental2019",
	owner: "google",
	jars: ["proprietary/vendor/framework/com.google.android.camera.experimental2019.jar"],
	soc_specific: true,
}

